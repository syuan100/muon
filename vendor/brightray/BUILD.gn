import("//build/config/ui.gni")
import("//media/media_options.gni")

toolkit_views = !is_mac

config("brightray_config") {
  include_dirs = [
    ".",
    "//gpu",
    "//skia/config",
    "//third_party/skia/include/core"
  ]

  if (is_mac) {
    libs = [
      "AppKit.framework",
      "Foundation.framework",
    ]
  }
}

source_set("common") {
  public_configs = [
    ":brightray_config",
  ]

  if (is_linux) {
    public_configs += [ "//electron/build:gtk3_internal_config" ]
  }

  sources = [
    "common/application_info.h",
    "common/application_info_mac.mm",
    "common/application_info_win.cc",
    "common/content_client.cc",
    "common/content_client.h",
    "common/mac/foundation_util.h",
    "common/mac/main_application_bundle.h",
    "common/mac/main_application_bundle.mm",
    "common/main_delegate.cc",
    "common/main_delegate.h",
    "common/main_delegate_mac.mm",
    "common/switches.cc",
    "common/switches.h",
  ]

  public_deps = [
    "//content/public/common",
  ]

  deps = [
    "//ui/base",
    "//storage/browser",
    "//storage/common",
    "//components/prefs",
    "//net:net_with_v8",
    "//media",
  ]
}

source_set("browser") {
  public_configs = [
    ":brightray_config",
  ]

  configs += [
    "//electron/build:electron_config",
  ]

  sources = [
    "browser/browser_client.cc",
    "browser/browser_client.h",
    "browser/browser_context.cc",
    "browser/browser_context.h",
    "browser/browser_main_parts.cc",
    "browser/browser_main_parts.h",
    "browser/browser_main_parts_mac.mm",
    "browser/devtools_contents_resizing_strategy.cc",
    "browser/devtools_contents_resizing_strategy.h",
    "browser/devtools_embedder_message_dispatcher.cc",
    "browser/devtools_embedder_message_dispatcher.h",
    "browser/devtools_file_system_indexer.cc",
    "browser/devtools_file_system_indexer.h",
    "browser/devtools_manager_delegate.cc",
    "browser/devtools_manager_delegate.h",
    "browser/devtools_ui.cc",
    "browser/devtools_ui.h",
    "browser/inspectable_web_contents.cc",
    "browser/inspectable_web_contents.h",
    "browser/inspectable_web_contents_delegate.h",
    "browser/inspectable_web_contents_view_delegate.cc",
    "browser/inspectable_web_contents_view_delegate.h",
    "browser/inspectable_web_contents_impl.cc",
    "browser/inspectable_web_contents_impl.h",
    "browser/inspectable_web_contents_view.h",
    "browser/inspectable_web_contents_view_mac.h",
    "browser/inspectable_web_contents_view_mac.mm",
    "browser/mac/bry_application.h",
    "browser/mac/bry_application.mm",
    "browser/mac/bry_inspectable_web_contents_view.h",
    "browser/mac/bry_inspectable_web_contents_view.mm",
    "browser/mac/cocoa_notification.h",
    "browser/mac/cocoa_notification.mm",
    "browser/mac/event_dispatching_window.h",
    "browser/mac/event_dispatching_window.mm",
    "browser/mac/notification_center_delegate.h",
    "browser/mac/notification_center_delegate.mm",
    "browser/mac/notification_presenter_mac.h",
    "browser/mac/notification_presenter_mac.mm",
    "browser/media/media_capture_devices_dispatcher.cc",
    "browser/media/media_capture_devices_dispatcher.h",
    "browser/media/media_stream_devices_controller.cc",
    "browser/media/media_stream_devices_controller.h",
    "browser/net_log.cc",
    "browser/net_log.h",
    "browser/network_delegate.cc",
    "browser/network_delegate.h",
    "browser/notification_delegate.cc",
    "browser/notification_delegate.h",
    "browser/notification_presenter.cc",
    "browser/notification_presenter.h",
    "browser/notification.cc",
    "browser/notification.h",
    "browser/platform_notification_service.cc",
    "browser/platform_notification_service.h",
    "browser/linux/libnotify_loader.h",
    "browser/linux/libnotify_loader.cc",
    "browser/linux/libnotify_notification.h",
    "browser/linux/libnotify_notification.cc",
    "browser/linux/notification_presenter_linux.h",
    "browser/linux/notification_presenter_linux.cc",
    "browser/win/notification_presenter_win.h",
    "browser/win/notification_presenter_win.cc",
    "browser/win/windows_toast_notification.h",
    "browser/win/windows_toast_notification.cc",
    "browser/win/scoped_hstring.h",
    "browser/win/scoped_hstring.cc",
    "browser/special_storage_policy.cc",
    "browser/special_storage_policy.h",
    "browser/url_request_context_getter.cc",
    "browser/url_request_context_getter.h",
    "browser/web_ui_controller_factory.cc",
    "browser/web_ui_controller_factory.h",
  ]

  public_deps = [
    "//content/public/browser",
    "//content/public/common",
  ]

  deps = [
    "//third_party/WebKit/public:blink_headers",
    "//components/cookie_config",
    "//content/shell:resources",
    "//net",
    ":common",
  ]

  if (is_linux) {
    include_dirs = [
      "/usr/include",
    ]

    deps += [
      "//electron/build:gtk3",
    ]
  }

  if (toolkit_views) {
    sources += [
      "browser/views/inspectable_web_contents_view_views.h",
      "browser/views/inspectable_web_contents_view_views.cc",
      "browser/views/views_delegate.cc",
      "browser/views/views_delegate.h",
    ]
    deps += [ "//ui/views" ]
  }
}
